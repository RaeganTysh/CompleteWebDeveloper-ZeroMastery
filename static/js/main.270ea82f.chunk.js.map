{"version":3,"sources":["components/Card.js","components/CardList.js","robots.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.270ea82f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//this way works \r\n/*const Card = (props) => {\r\n    return (\r\n        //<h1></h1>remeber can only return one element\r\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n            \r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}*/\r\n\r\n\r\n//this way with destructuring also works\r\n/*const Card = (props) => {\r\n    const {name, email, id} = props;\r\n    return (\r\n               <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            \r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}*/\r\n\r\n\r\n//Cleanest and third way of doing it- within the parameters you can destructure\r\nconst Card = ({name, email, id}) => {\r\n        return (\r\n               <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            \r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n//this is one way to write it \r\n/*const CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n\r\n    );\r\n}*/\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n//test error\r\n/*if (true) {\r\n    throw new Error('Nooooo');\r\n}*/\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                //because everything in these brackets is JS can be written this way \r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;\r\n\r\n//when using react you need to define key element for each i when doing loops","export const robots = [\r\n    {\r\n      id: 1,\r\n      name: 'Leanne Graham',\r\n      username: 'Bret',\r\n      email: 'Sincere@april.biz'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Ervin Howell',\r\n      username: 'Antonette',\r\n      email: 'Shanna@melissa.tv'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Clementine Bauch',\r\n      username: 'Samantha',\r\n      email: 'Nathan@yesenia.net'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Patricia Lebsack',\r\n      username: 'Karianne',\r\n      email: 'Julianne.OConner@kory.org'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Chelsey Dietrich',\r\n      username: 'Kamren',\r\n      email: 'Lucio_Hettinger@annie.ca'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Mrs. Dennis Schulist',\r\n      username: 'Leopoldo_Corkery',\r\n      email: 'Karley_Dach@jasper.info'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Kurtis Weissnat',\r\n      username: 'Elwyn.Skiles',\r\n      email: 'Telly.Hoeger@billy.biz'\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Nicholas Runolfsdottir V',\r\n      username: 'Maxime_Nienow',\r\n      email: 'Sherwood@rosamond.me'\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Glenna Reichert',\r\n      username: 'Delphine',\r\n      email: 'Chaim_McDermott@dana.io'\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'Clementina DuBuque',\r\n      username: 'Moriah.Stanton',\r\n      email: 'Rey.Padberg@karina.biz'\r\n    }\r\n  ];","import React from 'react';\r\n\r\n//using destructuring here alows us to grab PROPS object and properties\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'> \r\n            <input\r\n                className= 'pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style= {{overflowY: 'scroll', border: 'box solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Scroll;\r\n\r\n//PROPS\r\n//STATE\r\n//CHILDREN","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n/*Lifecycle hook */\r\n\r\ncomponentDidCatch(error, info) {\r\n    this.setState({hasError: true})\r\n}\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\n//import { render } from 'react-dom';\r\nimport CardList from '../components/CardList';\r\nimport { robots } from '../robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport '../containers/App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n\r\n//STATE smart components\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            //robots: robots,\r\n            robots: [],\r\n            searchfield: ''\r\n\r\n        }\r\n        console.log('component');\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: robots }));\r\n\r\n    }\r\n\r\n\r\n    //when type in the search box it prints the value \r\n    //console.log(event.target.value);\r\n    //react needs this syntax when you create your ownn functions \r\n    //onSearchChange = (event) =>\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots} />\r\n                </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n        //console.log('render');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//PROPS reads the proerties - recieve something and return something - deterministic\r\n//PROPS never change\r\n//STATE object that describes the application- search and robots- this can change - usually live in the parent componenent\r\n//STATE >> PROPS","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import CardList from './CardList'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n//import {robots, cats} from './robots';  \n//ex-in the event you had another export object in the robots file named cats\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}